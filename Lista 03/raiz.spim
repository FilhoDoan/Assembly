.data
output1: .asciiz "A raiz quadrada de "
output2: .asciiz " eh "
output3: .asciiz ", calculada em "
output4: .asciiz " iteracoes.\n"
error_input: .asciiz "Entradas invalidas.\n"
error_msg: .asciiz "Nao foi possivel calcular sqrt("
error_msg1: .asciiz ").\n"

.text
main:
    li      $v0, 5
    syscall
    move    $s0, $v0

    li      $v0, 5
    syscall
    move    $s1, $v0

    li      $t0, 1
    ble     $s0, $t0, print_error

    li      $t0, 16
    ble     $s1, $0, print_error
    bgt     $s1, $t0, print_error

    jal     find
    move    $a0, $v0
    move    $a1, $v1

    jal     sqrt
    jal     print_output
    j       end

find:
    multu   $a0, $a0
    mflo    $t0

    bgt     $t0, $s0, end_find
    beq     $t0, $s0, exact_sqrt

    addi    $a0, $a0, 1
    j       find

end_find:
    move    $v1, $a0
    addi    $a0, $a0, -1
    move    $v0, $a0
    jr      $ra

exact_sqrt:
    addi    $a0, $a0, -1
    move    $v0, $a0
    addi    $a0, $a0, 2
    move    $v1, $a0
    jr      $ra

sqrt:
    mtc1.d  $s0, $f20
    cvt.d.w $f20, $f20

    li      $t0, 1
    li      $t1, 10

    mtc1.d  $t0, $f8
    cvt.d.w $f8, $f8

    mtc1.d  $t1, $f10
    cvt.d.w $f10, $f10

error:
    addi    $s1, $s1, -1

    div.d   $f8, $f8, $f10

    bne     $s1, $0, error

    mtc1.d  $a0, $f4
    cvt.d.w $f4, $f4

    mtc1.d  $a1, $f6
    cvt.d.w $f6, $f6

    sub.d   $f10, $f6, $f4
    abs.d   $f10, $f10

    c.le.d  $f10, $f8
    bc1t    end_calc

    div.d   $f6, $f20, $f4
    sub.d   $f10, $f4, $f6
    abs.d   $f10, $f10

    c.le.d  $f10, $f8
    bc1t    end_calc

    li      $t1, 2

    mtc1.d  $t1, $f12
    cvt.d.w $f12, $f12

    li      $t1, 1
    li      $t0, 101

calculate:
    addi    $t1, $t1, 1
    beq     $t1, $t0, print_error2

    add.d   $f4, $f4, $f6
    div.d   $f4, $f4, $f12

    div.d   $f6, $f20, $f4
    sub.d   $f10, $f4, $f6
    abs.d   $f10, $f10

    c.le.d  $f10, $f8
    bc1t    end_calc

    j       calculate

end_calc:
    move    $s3, $t1
    jr      $ra

print_error:
    li      $v0, 4
    la      $a0, error_input
    syscall

    j       end

print_error2:
    li      $v0, 4
    la      $a0, error_msg
    syscall

    li      $v0, 1
    move    $a0, $s0
    syscall

    li      $v0, 4
    la      $a0, error_msg1
    syscall

    j       end

print_output:
    li      $v0, 4
    la      $a0, output1
    syscall

    li      $v0, 1
    move    $a0, $s0
    syscall

    li      $v0, 4
    la      $a0, output2
    syscall

    li      $v0, 3
    mov.d   $f12, $f6
    syscall 

    li      $v0, 4
    la      $a0, output3
    syscall

    li      $v0, 1
    move    $a0, $s3
    syscall

    li      $v0, 4
    la      $a0, output4
    syscall

end:
    li      $v0, 10
    syscall
